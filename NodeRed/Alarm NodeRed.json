[
    {
        "id": "2a622aa8.820f26",
        "type": "tab",
        "label": "Alarm Flows",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a520e472.c45e18",
        "type": "tab",
        "label": "Dashboard Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7db93d20.4b3eb4",
        "type": "tab",
        "label": "Lighting Flows",
        "disabled": false,
        "info": ""
    },
    {
        "id": "765045b6.cbfeac",
        "type": "tab",
        "label": "Sniffer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "71ea5477.681dec",
        "type": "mqtt-broker",
        "z": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": ""
    },
    {
        "id": "595290df.f50fe",
        "type": "ui_group",
        "z": "",
        "name": "Logins",
        "tab": "85b7ae1.a9b555",
        "disp": true,
        "width": "6"
    },
    {
        "id": "85b7ae1.a9b555",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "ff122872.2f6aa8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 54,
                "sy": 54,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cd079fb6.42f19",
        "type": "ui_group",
        "z": "",
        "name": "Status",
        "tab": "85b7ae1.a9b555",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "f0dbaae0.1f2738",
        "type": "sqlitedb",
        "z": "",
        "db": "/home/pi/sensordata.db"
    },
    {
        "id": "97e11d6.c72f6e",
        "type": "ui_group",
        "z": "",
        "name": "MQTT",
        "tab": "85b7ae1.a9b555",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "3f7b7967.62ca46",
        "type": "mqtt out",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "topic": "cmnd/LightLR/POWER",
        "qos": "1",
        "retain": "",
        "broker": "71ea5477.681dec",
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "d0141afa.964128",
        "type": "mqtt in",
        "z": "2a622aa8.820f26",
        "name": "login",
        "topic": "sys/login/name",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 106,
        "y": 237,
        "wires": [
            [
                "cf010e46.b8d52"
            ]
        ]
    },
    {
        "id": "6d4606ee.4591a8",
        "type": "mqtt out",
        "z": "2a622aa8.820f26",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "71ea5477.681dec",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "8d770200.ce787",
        "type": "inject",
        "z": "2a622aa8.820f26",
        "name": "Time Sync",
        "topic": "sys/sync/timestamp",
        "payload": "",
        "payloadType": "date",
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "x": 139,
        "y": 338,
        "wires": [
            [
                "6d4606ee.4591a8"
            ]
        ]
    },
    {
        "id": "283990b8.be97c",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "alarm/current/state",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "8862c25e.142e6",
                "66b12c58.b2c1f4"
            ]
        ]
    },
    {
        "id": "a1a4c642.2ef728",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "pir1",
        "group": "cd079fb6.42f19",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2b6084ad.0493cc",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "DOOR",
        "group": "cd079fb6.42f19",
        "order": 12,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "cf010e46.b8d52",
        "type": "function",
        "z": "2a622aa8.820f26",
        "name": "login to timestamp",
        "func": "msg.topic = msg.payload + \"/sync/timestamp\"\nmsg.payload = new Date().getTime()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 365,
        "y": 288,
        "wires": [
            [
                "6d4606ee.4591a8"
            ]
        ]
    },
    {
        "id": "fa6b4aea.611d98",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "alarm/heartbeat/uptime",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "e0f29ddd.b9412",
                "196c0db2.e3b8e2"
            ]
        ]
    },
    {
        "id": "216931a3.1e6f5e",
        "type": "ui_text",
        "z": "a520e472.c45e18",
        "group": "cd079fb6.42f19",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Up Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "cd41349b.934a78",
        "type": "inject",
        "z": "2a622aa8.820f26",
        "name": "cmd/alarm/rfid/add",
        "topic": "cmd/alarm/rfid/add",
        "payload": "{\"uid\":[90,113,101,217]}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 330,
        "y": 80,
        "wires": [
            [
                "77aedc27.cd0c44"
            ]
        ]
    },
    {
        "id": "77aedc27.cd0c44",
        "type": "mqtt out",
        "z": "2a622aa8.820f26",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "71ea5477.681dec",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "91b64d04.c0f31",
        "type": "inject",
        "z": "2a622aa8.820f26",
        "name": "",
        "topic": "cmd/alarm/code/del",
        "payload": "3105",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "77aedc27.cd0c44"
            ]
        ]
    },
    {
        "id": "60fbe0.57adf42",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "alarm/rfid/card",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 90,
        "y": 780,
        "wires": [
            [
                "7863496f.f9b308"
            ]
        ]
    },
    {
        "id": "7863496f.f9b308",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "RFID",
        "group": "cd079fb6.42f19",
        "order": 13,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "Valid",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Unknown",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 650,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "3f245db5.489ea2",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "pir2",
        "group": "cd079fb6.42f19",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5e0c3b80.3c7f34",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "pir3",
        "group": "cd079fb6.42f19",
        "order": 7,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "5c016132.92336",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "pir4",
        "group": "cd079fb6.42f19",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "7a18d9bf.386d48",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "pirHW",
        "group": "cd079fb6.42f19",
        "order": 9,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "40733cd5.319ac4",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "pirLR",
        "group": "cd079fb6.42f19",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "d89801ae.7c153",
        "type": "ui_switch",
        "z": "a520e472.c45e18",
        "name": "",
        "label": "pirDR",
        "group": "cd079fb6.42f19",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "T",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Q",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 690,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "be8d8b6f.7218d8",
        "type": "sqlite",
        "z": "a520e472.c45e18",
        "mydb": "f0dbaae0.1f2738",
        "name": "SensorData",
        "x": 570,
        "y": 860,
        "wires": [
            [
                "a13c902e.4938"
            ]
        ]
    },
    {
        "id": "a13c902e.4938",
        "type": "ui_template",
        "z": "a520e472.c45e18",
        "group": "595290df.f50fe",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "4",
        "format": "<table style=\"width:100%\">\n  <tr>\n    <th align=\"left\">Date</th>\n    <th align=\"left\">Logins</th> \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td>{{msg.payload[$index].currentdate}}</td>\n    <td>{{msg.payload[$index].count}}</td> \n  </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 760,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "bac5646f.51ba58",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "alarm/status/env",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 100,
        "y": 400,
        "wires": [
            [
                "736c0a6c.43d034"
            ]
        ]
    },
    {
        "id": "2186b0d3.c9bac",
        "type": "ui_text",
        "z": "a520e472.c45e18",
        "group": "cd079fb6.42f19",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Start Time",
        "format": "{{msg.payload.StartTime}}",
        "layout": "row-spread",
        "x": 710,
        "y": 400,
        "wires": []
    },
    {
        "id": "f3313f85.fc844",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "login",
        "topic": "sys/login/name",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 90,
        "y": 980,
        "wires": [
            [
                "de24bfe0.6eefa"
            ]
        ]
    },
    {
        "id": "c732f769.062718",
        "type": "sqlite",
        "z": "a520e472.c45e18",
        "mydb": "f0dbaae0.1f2738",
        "name": "SensorData",
        "x": 470,
        "y": 960,
        "wires": [
            [
                "5fe7145e.8a4a7c",
                "f1259527.f7d1d8"
            ]
        ]
    },
    {
        "id": "de24bfe0.6eefa",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "insert login to db",
        "func": "\n//msg.topic=\"INSERT INTO logins(topic, payload, currentdate, currenttime)\"\n//    + values('\" + msg.topic + \"', '\" + msg.payload + \"', date('now'), time('now'))\";\n    \n    \n// String.prototype.format = function() {\n//     var formatted = this;\n//     for( var arg in arguments ) {\n//         formatted = formatted.replace(\"{\" + arg + \"}\", arguments[arg]);\n//     }\n//     return formatted;\n// };\n\n//sql=\"INSERT INTO logins(topic, payload, currentdate, currenttime) values('{0}', '{1}', date('now'), time('now'))\";\n//msg.topic = sql.format(msg.topic, msg.payload);\n\nmsg.payload = [msg.topic,msg.payload];\nmsg.topic = \"INSERT INTO logins(topic, payload, currentdate, currenttime)\"\n    + \"values(?, ?, date('now'), time('now'))\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 960,
        "wires": [
            [
                "c732f769.062718"
            ]
        ]
    },
    {
        "id": "5fe7145e.8a4a7c",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "select logins by day",
        "func": "msg.topic = \"select currentdate, count(*) as count from logins\"\n        + \" group by currentdate order by currentdate desc limit 7\"\n        \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "be8d8b6f.7218d8"
            ]
        ]
    },
    {
        "id": "fc9c4bfb.4353b8",
        "type": "sqlite",
        "z": "a520e472.c45e18",
        "mydb": "f0dbaae0.1f2738",
        "name": "SensorData",
        "x": 570,
        "y": 1060,
        "wires": [
            [
                "54a6cc1b.436e34"
            ]
        ]
    },
    {
        "id": "54a6cc1b.436e34",
        "type": "ui_template",
        "z": "a520e472.c45e18",
        "group": "595290df.f50fe",
        "name": "",
        "order": 2,
        "width": "6",
        "height": "4",
        "format": "<table style=\"width:100%\">\n  <tr>\n    <th align=\"left\">Date</th>\n    <th align=\"left\">Time</th> \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td>{{msg.payload[$index].currentdate}}</td>\n    <td>{{msg.payload[$index].currenttime}}</td> \n  </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 760,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "f1259527.f7d1d8",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "select logins today",
        "func": "msg.topic = \"select currentdate, currenttime from logins\"\n        + \" where currentdate in (select max(currentdate) from logins)\"\n        + \" order by currenttime desc\";\n        \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "fc9c4bfb.4353b8"
            ]
        ]
    },
    {
        "id": "9bebe01e.f3647",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "#",
        "qos": "2",
        "broker": "71ea5477.681dec",
        "x": 70,
        "y": 1180,
        "wires": [
            [
                "83adb6aa.8430b8"
            ]
        ]
    },
    {
        "id": "83adb6aa.8430b8",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "Store and shift msg",
        "func": "if( msg.topic == \"alarm/heartbeat/uptime\")\n    return null;\nif(msg.topic.indexOf( \"tele/\") == 0)    // filter out telemetry messages\n    return null\n\ndate = new Date();\nmsg.time = date.toTimeString().split(' ')[0];\n\n// initialise the counter to 0 if it doesn't exist already\nvar text = context.get('text') || [];\n\ntext.push(msg);\n\nif (text.length > 30){\n    text.shift();\n    text.length = 30;\n} \n\n// store the value back\ncontext.set('text',text);\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = text;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "d19ab53e.81cd18"
            ]
        ]
    },
    {
        "id": "d19ab53e.81cd18",
        "type": "ui_template",
        "z": "a520e472.c45e18",
        "group": "97e11d6.c72f6e",
        "name": "MQTT Output",
        "order": 1,
        "width": "6",
        "height": "12",
        "format": "<ul ng-style=\"{'white-space': 'nowrap'}\">\n <li ng-repeat=\"x in msg.payload\">\n <font size=\"2\" color=\"yellow\">{{x.time}}</font>\n <font size=\"2\" color=\"red\">{{x.topic}}</font>\n <font size=\"2\" color=\"white\"> {{x.payload}}</font>\n </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 700,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "8862c25e.142e6",
        "type": "ui_text",
        "z": "a520e472.c45e18",
        "group": "cd079fb6.42f19",
        "order": 1,
        "width": "4",
        "height": "1",
        "name": "Alarm State",
        "label": "Alarm State:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "cd60c0db.ac853",
        "type": "e-mail",
        "z": "a520e472.c45e18",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "name": "graham.knight@lastdayofmay.co.uk",
        "dname": "",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "e0f29ddd.b9412",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "timestamp to time",
        "func": "date = new Date(msg.payload * 1000);\n\n//msg.payload = date.toTimeString().split(' ')[0];\n\nvar msecPerMinute = 1000 * 60;  \nvar msecPerHour = msecPerMinute * 60;  \nvar msecPerDay = msecPerHour * 24;  \nvar interval = msg.payload * 1000;\n\nvar days = Math.floor(interval / msecPerDay );  \ninterval = interval - (days * msecPerDay );  \n\n// Calculate the hours, minutes, and seconds.  \nvar hours = Math.floor(interval / msecPerHour );  \ninterval = interval - (hours * msecPerHour );  \n\nvar minutes = Math.floor(interval / msecPerMinute );  \ninterval = interval - (minutes * msecPerMinute );  \n\nvar seconds = Math.floor(interval / 1000 );  \n\nmsg.payload = util.format(\"%d days %d:%d:%d\", days, hours, minutes, seconds);\n//msg.payload = days + \" days \" + hours + \":\" + minutes + \":\" + seconds;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "216931a3.1e6f5e"
            ]
        ]
    },
    {
        "id": "736c0a6c.43d034",
        "type": "json",
        "z": "a520e472.c45e18",
        "name": "",
        "pretty": false,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "c206e618.9f6478"
            ]
        ]
    },
    {
        "id": "c206e618.9f6478",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "timestamp to time",
        "func": "date = new Date(msg.payload.StartTime * 1000);\n\nmsg.payload.StartTime = date.toDateString() + \" \" +  date.toTimeString().split(' ')[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 400,
        "wires": [
            [
                "2186b0d3.c9bac"
            ]
        ]
    },
    {
        "id": "a27ff9bb.6c1708",
        "type": "inject",
        "z": "2a622aa8.820f26",
        "name": "cmd/alarm/rfid/master",
        "topic": "cmd/alarm/rfid/master",
        "payload": "{\"uid\":[50,60,213,17]}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 340,
        "y": 120,
        "wires": [
            [
                "77aedc27.cd0c44"
            ]
        ]
    },
    {
        "id": "761a3f7d.4b528",
        "type": "mqtt in",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "topic": "alarm/sensor/pirHW",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "7140b155.9e6c7"
            ]
        ]
    },
    {
        "id": "b3a4adc6.3c77",
        "type": "trigger",
        "z": "7db93d20.4b3eb4",
        "op1": "ON",
        "op2": "OFF",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "min",
        "reset": "",
        "name": "",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "4a8e307a.3c6db"
            ]
        ]
    },
    {
        "id": "a5a90c86.bfde2",
        "type": "mqtt in",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "topic": "alarm/sensor/door",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "7140b155.9e6c7"
            ]
        ]
    },
    {
        "id": "bc8d91e0.9964c",
        "type": "time-range-switch",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "lat": "50.83",
        "lon": "0.17",
        "startTime": "sunrise",
        "endTime": "22:30",
        "startOffset": "60",
        "endOffset": "",
        "x": 380,
        "y": 420,
        "wires": [
            [],
            [
                "b3a4adc6.3c77"
            ]
        ]
    },
    {
        "id": "7140b155.9e6c7",
        "type": "switch",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "T",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 210,
        "y": 420,
        "wires": [
            [
                "bc8d91e0.9964c"
            ]
        ]
    },
    {
        "id": "817d2e0f.ad45c",
        "type": "comment",
        "z": "7db93d20.4b3eb4",
        "name": "Detects entry and hallway events - turns light on if its dark",
        "info": "",
        "x": 270,
        "y": 280,
        "wires": []
    },
    {
        "id": "66b12c58.b2c1f4",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "If Triggered message",
        "func": "var dt = new Date();    // get the current date and time\n\n// if a TRIGGERED event\nif( msg.payload == \"TR\")\n{\n    msg.payload = \"Alarm Triggered at: \" + dt.toDateString() + \" \" + dt.toTimeString();\n    return msg;\n}\n\nif( msg.payload == \"ARM\")\n{\n    msg.payload = \"Alarm Armed at: \" + dt.toDateString() + \" \" + dt.toTimeString();\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 240,
        "wires": [
            [
                "cd60c0db.ac853",
                "53e23fe2.070ba"
            ]
        ]
    },
    {
        "id": "196c0db2.e3b8e2",
        "type": "trigger",
        "z": "a520e472.c45e18",
        "op1": "",
        "op2": "NO ALARM",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "216931a3.1e6f5e",
                "13e02b39.e16175"
            ]
        ]
    },
    {
        "id": "dbdf1a8d.97f698",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "alarm/sensor/#",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "ac830a55.998c28"
            ]
        ]
    },
    {
        "id": "ac830a55.998c28",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "Save state",
        "func": "flow.set(msg.topic, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 600,
        "wires": [
            [
                "44c56575.88469c"
            ]
        ]
    },
    {
        "id": "44c56575.88469c",
        "type": "switch",
        "z": "a520e472.c45e18",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "alarm/sensor/pir1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarm/sensor/pir2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarm/sensor/pir3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarm/sensor/pir4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarm/sensor/pirHW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarm/sensor/pirLR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarm/sensor/pirDR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarm/sensor/door",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 8,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "a1a4c642.2ef728"
            ],
            [
                "3f245db5.489ea2"
            ],
            [
                "5e0c3b80.3c7f34"
            ],
            [
                "5c016132.92336"
            ],
            [
                "7a18d9bf.386d48"
            ],
            [
                "40733cd5.319ac4"
            ],
            [
                "d89801ae.7c153"
            ],
            [
                "2b6084ad.0493cc"
            ]
        ]
    },
    {
        "id": "13e02b39.e16175",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "Heartbeat message",
        "func": "var dt = new Date();    // get the current date and time\n\nvar text = \"No Heartbeat seen at: \" + dt.toDateString() + \" \" + dt.toTimeString();\n\nmsg.payload = text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 120,
        "wires": [
            [
                "cd60c0db.ac853",
                "53e23fe2.070ba"
            ]
        ]
    },
    {
        "id": "4a8e307a.3c6db",
        "type": "mqtt out",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "topic": "cmnd/LightHW/POWER",
        "qos": "",
        "retain": "",
        "broker": "71ea5477.681dec",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "ac165c94.62a1c",
        "type": "bigtimer",
        "z": "7db93d20.4b3eb4",
        "outtopic": "",
        "outpayload1": "ON",
        "outpayload2": "OFF",
        "name": "Big Timer",
        "lat": "50.83",
        "lon": "0.17",
        "starttime": "5004",
        "endtime": "1350",
        "startoff": 0,
        "endoff": 0,
        "offs": 0,
        "outtext1": "ON",
        "outtext2": "OFF",
        "timeout": 1440,
        "sun": true,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "jan": true,
        "feb": true,
        "mar": true,
        "apr": true,
        "may": true,
        "jun": true,
        "jul": true,
        "aug": true,
        "sep": true,
        "oct": true,
        "nov": true,
        "dec": true,
        "day1": 0,
        "month1": 0,
        "day2": 0,
        "month2": 0,
        "day3": 0,
        "month3": 0,
        "day4": 0,
        "month4": 0,
        "day5": 0,
        "month5": 0,
        "d1": 0,
        "w1": 0,
        "d2": 0,
        "w2": 0,
        "d3": 0,
        "w3": 0,
        "d4": 0,
        "w4": 0,
        "d5": 0,
        "w5": 0,
        "suspend": false,
        "random": false,
        "repeat": false,
        "atstart": true,
        "odd": false,
        "even": false,
        "x": 140,
        "y": 200,
        "wires": [
            [
                "3f7b7967.62ca46",
                "4a8e307a.3c6db"
            ],
            [],
            []
        ]
    },
    {
        "id": "84eec617.211328",
        "type": "inject",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 40,
        "wires": [
            [
                "3f7b7967.62ca46",
                "4a8e307a.3c6db"
            ]
        ]
    },
    {
        "id": "8b2a82f.e03118",
        "type": "mqtt in",
        "z": "765045b6.cbfeac",
        "name": "",
        "topic": "Sniffer/#",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 67,
        "y": 156,
        "wires": [
            [
                "6e384b8a.ba8c94",
                "502487f9.e2a948"
            ]
        ]
    },
    {
        "id": "6e384b8a.ba8c94",
        "type": "json",
        "z": "765045b6.cbfeac",
        "name": "",
        "pretty": true,
        "x": 256,
        "y": 155,
        "wires": [
            [
                "6ef91ff5.15fa2",
                "d3cfcc29.4ddc5",
                "21a5bd83.a3ced2",
                "165017fe.b723d8"
            ]
        ]
    },
    {
        "id": "6ef91ff5.15fa2",
        "type": "function",
        "z": "765045b6.cbfeac",
        "name": "Search",
        "func": "\nvar knownDevices=[\n\"00:c0:ca:82:ee:8c\",\n\"00:e0:4c:53:44:58\",\n\"00:0f:04:b2:89:5f\",\n\"02:63:bd:d2:05:81\",\n\"12:3a:b4:60:a9:c3\",\n\"12:67:0d:6b:6c:c3\",\n\"1a:2c:b1:b5:7d:16\",\n\"1e:fe:8e:5a:7f:f6\",\n\"24:0a:c4:0d:90:6d\",\n\"2c:59:e5:e7:ce:f6\",\n\"4a:d0:2f:e1:58:f5\",\n\"4c:cc:6a:ff:70:57\",\n\"52:a4:df:6a:b7:99\",\n\"54:67:51:2a:49:22\",\n\"56:67:11:29:f9:bd\",\n\"5c:cf:7f:d7:22:2b\",\n\"5c:cf:7f:d7:1c:b5\",\n\"5c:cf:7f:c1:6b:e0\",\n\"60:01:94:07:0c:ad\",\n\"60:f4:45:c5:ab:44\",\n\"60:fe:c5:c2:4c:d2\",\n\"62:24:c2:f1:be:ea\",\n\"6c:b0:ce:2a:56:a8\",\n\"68:54:fd:a1:51:81\",\n\"6a:fe:e8:f0:10:9f\",\n\"6e:2f:ba:15:4a:e2\",\n\"70:62:b8:6c:85:24\",\n\"70:62:b8:6c:85:25\",\n\"76:5e:6c:af:56:66\",\n\"7e:7a:c0:12:29:78\",\n\"7e:d1:1c:a2:27:ee\",\n\"90:b6:86:c4:ba:9e\",\n\"9a:a4:ef:a7:c9:d7\",\n\"a4:8d:ee:ec:b2:c2\",\n\"b6:e6:d2:de:af:c1\",\n\"b8:27:eb:22:d9:40\",\n\"c6:3f:28:66:d9:a3\",\n\"d0:c5:f3:b3:5d:45\",\n\"d2:fe:31:d1:3c:9d\",\n\"de:b2:ce:75:db:72\",\n\"e4:a7:a0:13:b7:2b\",\n\"e6:e7:b4:69:16:34\",\n\"ea:ed:cd:76:5c:8e\",\n\"ec:ad:b8:6a:a3:d9\",\n\"ee:fe:37:da:9e:aa\",\n\"f8:16:54:d2:8f:b6\",\n\"78:28:ca:11:96:08\",\n\"78:28:ca:11:96:09\"\n];\nvar newDevice=false;\nfor ( i=0;i<msg.payload.MAC.length;i++){\n    if (knownDevices.indexOf(msg.payload.MAC[i])<0){\n        newDevice=true;\n        deviceMac=msg.payload.MAC[i];\n    }\n}\n\nif (newDevice){\n    msg.payload=deviceMac;\n    return msg;\n}\n// else msg.payload=\"\";\n",
        "outputs": 1,
        "noerr": 0,
        "x": 458,
        "y": 157,
        "wires": [
            [
                "73699af6.60ef44",
                "7602881a.28a508"
            ]
        ]
    },
    {
        "id": "80c18df2.8df91",
        "type": "debug",
        "z": "765045b6.cbfeac",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 991,
        "y": 78,
        "wires": []
    },
    {
        "id": "7602881a.28a508",
        "type": "switch",
        "z": "765045b6.cbfeac",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "\"nix Neues\"",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 648,
        "y": 154,
        "wires": [
            [
                "80c18df2.8df91"
            ],
            []
        ]
    },
    {
        "id": "73699af6.60ef44",
        "type": "debug",
        "z": "765045b6.cbfeac",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 654,
        "y": 71,
        "wires": []
    },
    {
        "id": "d3cfcc29.4ddc5",
        "type": "function",
        "z": "765045b6.cbfeac",
        "name": "Grak",
        "func": "if (msg.payload.MAC.indexOf(\"38:a4:ed:bc:d6:bb\")>0)\n    msg.payload=msg.payload=\"Grak here\";\nelse\n    msg.payload=\"Grak out\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 438,
        "y": 282,
        "wires": [
            [
                "4974bd71.939ac4"
            ]
        ]
    },
    {
        "id": "21a5bd83.a3ced2",
        "type": "debug",
        "z": "765045b6.cbfeac",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 403,
        "y": 398,
        "wires": []
    },
    {
        "id": "502487f9.e2a948",
        "type": "debug",
        "z": "765045b6.cbfeac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 210,
        "y": 440,
        "wires": []
    },
    {
        "id": "165017fe.b723d8",
        "type": "function",
        "z": "765045b6.cbfeac",
        "name": "Gill",
        "func": "if (msg.payload.MAC.indexOf(\"80:4E:81:4F:31:4B\")>0)\n    msg.payload=msg.payload=\"Gill here\";\nelse\n    msg.payload=\"Gill out\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 435,
        "y": 341,
        "wires": [
            [
                "9e04c032.f0da1"
            ]
        ]
    },
    {
        "id": "9e04c032.f0da1",
        "type": "function",
        "z": "765045b6.cbfeac",
        "name": "Status",
        "func": "if (msg.payload==\"Marwin out\") node.status({fill:\"red\",shape:\"ring\",text:msg.payload});\nelse node.status({fill:\"green\",shape:\"ring\",text:msg.payload});    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 623,
        "y": 345,
        "wires": [
            []
        ]
    },
    {
        "id": "4974bd71.939ac4",
        "type": "function",
        "z": "765045b6.cbfeac",
        "name": "Status",
        "func": "if (msg.payload==\"Andreas out\") node.status({fill:\"red\",shape:\"ring\",text:msg.payload});\nelse node.status({fill:\"green\",shape:\"ring\",text:msg.payload});    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 623,
        "y": 276,
        "wires": [
            []
        ]
    },
    {
        "id": "9563d911.4155e8",
        "type": "mqtt out",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "true",
        "broker": "71ea5477.681dec",
        "x": 650,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6efd6e70.c5d2a",
        "type": "ui_text_input",
        "z": "a520e472.c45e18",
        "name": "Message",
        "label": "Message",
        "group": "595290df.f50fe",
        "order": 4,
        "width": "",
        "height": "",
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "message",
        "x": 160,
        "y": 1320,
        "wires": [
            [
                "a41942a5.f0f86"
            ]
        ]
    },
    {
        "id": "a5b51c73.fc6c2",
        "type": "ui_button",
        "z": "a520e472.c45e18",
        "name": "Submit",
        "group": "595290df.f50fe",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "SUBMIT",
        "color": "black",
        "bgcolor": "",
        "icon": "fa-arrow-circle-o-up",
        "payload": "submit",
        "payloadType": "str",
        "topic": "submit",
        "x": 100,
        "y": 1420,
        "wires": [
            [
                "a41942a5.f0f86"
            ]
        ]
    },
    {
        "id": "a41942a5.f0f86",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "Store and Submit",
        "func": "context.msg = context.msg || {};\n\nswitch (msg.topic){\n    case 'message':\n        context.msg.payload = msg.payload;\n        break;\n    case 'topic':\n        context.msg.topic = msg.payload;\n        break;\n    case 'submit':\n        if(context.msg.topic){\n            return context.msg;\n        }else{\n            context.msg.topic=\"#\"; // set default topic\n            return context.msg;\n        }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 370,
        "y": 1340,
        "wires": [
            [
                "9563d911.4155e8",
                "3269822a.9decde"
            ]
        ]
    },
    {
        "id": "3269822a.9decde",
        "type": "debug",
        "z": "a520e472.c45e18",
        "name": "MQTT Monitor",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 660,
        "y": 1300,
        "wires": []
    },
    {
        "id": "96e3cdf1.224d4",
        "type": "ui_text_input",
        "z": "a520e472.c45e18",
        "name": "Topic",
        "label": "Topic/",
        "group": "595290df.f50fe",
        "order": 3,
        "width": "",
        "height": "",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "x": 170,
        "y": 1280,
        "wires": [
            [
                "a41942a5.f0f86"
            ]
        ]
    },
    {
        "id": "910457ca.31a398",
        "type": "ui_button",
        "z": "a520e472.c45e18",
        "name": "Clear",
        "group": "595290df.f50fe",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "CLEAR",
        "color": "black",
        "bgcolor": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 1380,
        "wires": [
            [
                "96e3cdf1.224d4",
                "6efd6e70.c5d2a"
            ]
        ]
    },
    {
        "id": "2f166239.683f7e",
        "type": "inject",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 90,
        "y": 920,
        "wires": [
            [
                "5fe7145e.8a4a7c",
                "f1259527.f7d1d8"
            ]
        ]
    },
    {
        "id": "c753b6c1.d4a398",
        "type": "http request",
        "z": "a520e472.c45e18",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "https://api.twilio.com/2010-04-01/Accounts/ACf098405324979f56c86e906441c25562/Messages.json",
        "tls": "",
        "x": 950,
        "y": 100,
        "wires": [
            [
                "79265a.421db9a8"
            ]
        ]
    },
    {
        "id": "53e23fe2.070ba",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "Prepare SMS",
        "func": "\nvar text = msg.payload;\nmsg.payload = {\n    'To': '+447940773737',\n    'From': '+441268833034',\n    'Body': text\n};\nmsg.headers = {'content-type':'application/x-www-form-urlencoded'};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 180,
        "wires": [
            [
                "c753b6c1.d4a398"
            ]
        ]
    },
    {
        "id": "79265a.421db9a8",
        "type": "debug",
        "z": "a520e472.c45e18",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1050,
        "y": 180,
        "wires": []
    },
    {
        "id": "c951647.7002898",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "login",
        "topic": "sys/login/name",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 70,
        "y": 180,
        "wires": [
            [
                "550a9f6d.8fca"
            ]
        ]
    },
    {
        "id": "f5ae18e7.2c6488",
        "type": "mqtt in",
        "z": "a520e472.c45e18",
        "name": "",
        "topic": "alarm/status",
        "qos": "0",
        "broker": "71ea5477.681dec",
        "x": 90,
        "y": 340,
        "wires": [
            [
                "1b512d22.4ecaa3"
            ]
        ]
    },
    {
        "id": "1b512d22.4ecaa3",
        "type": "ui_text",
        "z": "a520e472.c45e18",
        "group": "cd079fb6.42f19",
        "order": 3,
        "width": "2",
        "height": "1",
        "name": "Status",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 690,
        "y": 340,
        "wires": []
    },
    {
        "id": "550a9f6d.8fca",
        "type": "function",
        "z": "a520e472.c45e18",
        "name": "Login message",
        "func": "var dt = new Date();    // get the current date and time\n\nvar text = msg.payload + \" login at: \" + dt.toDateString() + \" \" + dt.toTimeString();\n\nmsg.payload = text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "53e23fe2.070ba"
            ]
        ]
    },
    {
        "id": "24629ef6.6ad0f2",
        "type": "inject",
        "z": "7db93d20.4b3eb4",
        "name": "",
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 80,
        "wires": [
            [
                "3f7b7967.62ca46",
                "4a8e307a.3c6db"
            ]
        ]
    }
]